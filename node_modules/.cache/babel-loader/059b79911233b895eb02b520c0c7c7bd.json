{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Router Project 2\\\\09-time-to-practice-starting-code (1)\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../hooks/use-http';\nimport { addComment, getAllComments } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status == 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this);\n  }\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"NfpDFWeZ/GO3payy9Kwyi79Q1p0=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useParams","classes","NewCommentForm","useHttp","addComment","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["D:/React Router Project 2/09-time-to-practice-starting-code (1)/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import { useState , useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../hooks/use-http';\nimport { addComment, getAllComments } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {quoteId} = params;\n  const {sendRequest , status, data :loadedComments } =   useHttp(getAllComments);\n  useEffect(() => {\n  sendRequest(params.quoteId)\n  } , [quoteId  ,sendRequest ]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {\n  \n  }\n  let comments;\n  if(status == 'pending'){\n    comments =  ( <div className='centered'>\n      <LoadingSpinner />\n      </div>\n    );\n  }\n  if(status === 'completed' && (loadedComments && loadedComments.length > 0)){\n    comments = <CommentsList comments = {loadedComments} />\n  }\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId = {params.quoteId} onAddedComment = {addedCommentHandler  } />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAC5C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,UAAU,EAAEC,cAAc,QAAQ,YAAY;AACvD,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAC1C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMa,MAAM,GAAGX,SAAS,EAAE;EAC1B,MAAM;IAACY;EAAO,CAAC,GAAGD,MAAM;EACxB,MAAM;IAACE,WAAW;IAAGC,MAAM;IAAEC,IAAI,EAAEC;EAAe,CAAC,GAAKb,OAAO,CAACE,cAAc,CAAC;EAC/EN,SAAS,CAAC,MAAM;IAChBc,WAAW,CAACF,MAAM,CAACC,OAAO,CAAC;EAC3B,CAAC,EAAG,CAACA,OAAO,EAAGC,WAAW,CAAE,CAAC;EAC7B,MAAMI,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EACD,MAAMQ,mBAAmB,GAAG,MAAM,CAElC,CAAC;EACD,IAAIC,QAAQ;EACZ,IAAGL,MAAM,IAAI,SAAS,EAAC;IACrBK,QAAQ,gBAAM;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrC,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAEnB;EACH;EACA,IAAGL,MAAM,KAAK,WAAW,IAAKE,cAAc,IAAIA,cAAc,CAACI,MAAM,GAAG,CAAE,EAAC;IACzED,QAAQ,gBAAG,QAAC,YAAY;MAAC,QAAQ,EAAIH;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EACzD;EACA,IAAGF,MAAM,KAAK,WAAW,KAAK,CAACE,cAAc,IAAIA,cAAc,CAACI,MAAM,KAAK,CAAC,CAAC,EAAC;IAC5ED,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC;EACpE;EAEA,oBACE;IAAS,SAAS,EAAElB,OAAO,CAACkB,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACV,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEQ,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAR,eAAe,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAIE,MAAM,CAACC,OAAQ;MAAC,cAAc,EAAIM;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAG,EACzGC,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAC,GAxCIX,QAAQ;EAAA,QAEGR,SAAS,EAEgCG,OAAO;AAAA;AAAA,KAJ3DK,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}